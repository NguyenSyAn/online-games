version: '3.7'

services:

  backend:
    restart: always
    build:
      context: ./services/backend
      dockerfile: Dockerfile-prod
    volumes:
      - './services/backend:/usr/src/app'
    environment:
      - FLASK_ENV=production
      - APP_ENV=production
      - DATABASE_DEV_URL=mysql+pymysql://online_games:Flask#123@database:3306/online_games_db?charset=utf8mb4
      - DATABASE_PROD_URL=mysql+pymysql://online_games:Flask#123@database:3306/online_games_db?charset=utf8mb4
      - SECRET_KEY=my_precious_secret_key
      - ADMIN_SECRET_KEY=admin_precious_secret_key
      - RECREATE_DB=false
    depends_on:
      - database
      - redis
    networks:
      - igz

  database:
    image: mariadb
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: Flask#123
      MYSQL_USER: online_games
      MYSQL_PASSWORD: Flask#123
      MYSQL_DATABASE: online_games_db
    command:
      - "--character-set-server=utf8mb4"
      - "--collation-server=utf8mb4_unicode_ci"
    volumes:
      - ./conf/mariadb-conf.d:/etc/mysql/mariadb.conf.d
      - ./conf/conf.d:/etc/mysql/conf.d/
    networks:
      - igz

  redis:
    restart: always
    image: redis:4.0.5-alpine
    command: ["redis-server", "--appendonly", "yes"]
    hostname: redis
    volumes:
      - redis-data:/data
    networks:
      - igz

  client:
    restart: always
    build:
      context: ./services/client
      dockerfile: Dockerfile-prod
    volumes:
      - './services/client:/usr/src/app'
      - '/usr/src/app/node_modules'
    expose:
      - 80
    environment:
      - NODE_ENV=development
    depends_on:
      - backend
    networks:
      - igz

  nginx:
    build:
      context: ./services/nginx
      dockerfile: Dockerfile-prod
    restart: always
    ports:
      - 80:80
    depends_on:
      - backend
      - client
    networks:
      - igz

volumes:
  redis-data:

networks:
  igz:
    driver: overlay